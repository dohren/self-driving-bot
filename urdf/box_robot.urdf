<?xml version="1.0"?>
<robot name="my_robot">

  <!-- Base of the robot -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0.105"/>
      <geometry>
        <box size="0.30 0.20 0.15"/>
      </geometry>
      <material name="wood">
        <color rgba="0.6 0.4 0.2 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0.105"/>
      <geometry>
        <box size="0.30 0.20 0.15"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.25"/>
      <inertia ixx="0.00027539" ixy="0" ixz="0" iyy="0.00052463" iyz="0" izz="0.00027551"/>
    </inertial>
  </link>

  <!-- Right wheel -->
  <link name="right_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.035" length="0.02"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.035" length="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/> <!-- Setze die Masse des Rades -->
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/> <!-- Schätze die Trägheitswerte -->
    </inertial>
  </link>

  <!-- Left wheel -->
  <link name="left_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.035" length="0.02"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.035" length="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/> <!-- Setze die Masse des Rades -->
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/> <!-- Schätze die Trägheitswerte -->
    </inertial>
  </link>

  <!-- Front ball -->
  <link name="front_ball">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.05"/> <!-- Setze die Masse der Kugel -->
      <inertia ixx="0.00005" ixy="0" ixz="0" iyy="0.00005" iyz="0" izz="0.00005"/> <!-- Schätze die Trägheitswerte -->
    </inertial>
  </link>

  <!-- Joints -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="-0.08 -0.111 0.035" rpy="1.5708 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="-0.08 0.111 0.035" rpy="1.5708 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>

  <joint name="front_ball_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_ball"/>
    <origin xyz="0.08 0 0.007" rpy="0 0 0"/>
  </joint>

  <!-- Gazebo joint_state_publisher plugin -->
  <gazebo>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
      <joint_name>right_wheel_joint</joint_name>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>front_ball_joint</joint_name>
      <topic>joint_states</topic>
      <update_rate>30</update_rate>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <!-- Definieren der Gelenke für die beiden Räder -->
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>


      <!-- Anpassung der Radtrennung und des Radradius auf die Robotergröße -->
      <wheel_separation>0.20</wheel_separation> <!-- Abstand zwischen den Rädern (Breite des Roboters) -->
      <wheel_radius>0.035</wheel_radius> <!-- Radius der Räder (Durchmesser = 0.07m) -->

      <!-- Maximale und minimale Beschleunigungen und Geschwindigkeiten -->
      <max_linear_acceleration>2</max_linear_acceleration>
      <min_linear_acceleration>-2</min_linear_acceleration>
      <max_angular_acceleration>3</max_angular_acceleration>
      <min_angular_acceleration>-3</min_angular_acceleration>

      <max_linear_velocity>0.5</max_linear_velocity>
      <min_linear_velocity>-0.5</min_linear_velocity>
      <max_angular_velocity>0.75</max_angular_velocity>
      <min_angular_velocity>-0.75</min_angular_velocity>

      <!-- Definieren der Steuerungs- und Odometrie-Themen -->
      <topic>/cmd_vel</topic>
      <odom_topic>/odom</odom_topic>
      <tf_topic>tf</tf_topic>

      <!-- Definition des Rahmens für Odometrie -->
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>

      <!-- Häufigkeit der Odometrie-Publikation -->
      <odom_publish_frequency>30</odom_publish_frequency>
    </plugin>
  </gazebo>

  <!-- Gazebo plugin to preserve front_ball_joint -->
  <gazebo reference="front_ball_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>

</robot>
